{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/app/app.js\";\nimport React, { Component } from \"react\";\nimport Form from '../form/form';\nimport Weather from \"../weather/weather\";\nimport WeatherService from '../../services/weather-service';\nimport './app.css';\nlet city = 'London';\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.weatherService = new WeatherService();\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n    };\n\n    this.getDataWeather = async e => {\n      e.preventDefault();\n      let appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n      const city = this.state.city;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(appId, \"&units=metric\"));\n      const data = await api_call.json();\n      console.log(data);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\n;\nexport default App; // import React,{Component} from 'react';\n// import Header from '../header/header';\n// import Form from '../form/form';\n// import Weather from '../weather/weather';\n// // import BorderInfo from '../border-info/border-info';\n// import './app.css';\n// const API_KEY = '887a9e3fcec30ecb5238bc4f492dcf5b';\n// export default class App extends Component{\n// \tgetWeather = async(e) =>{\n// \t\te.preventDefault();\n// \t\tconst city = e.target.elements.city.value;\n// \t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n// \t\tconst data = await api_call.json();\n// \t\tconsole.log(data);\n// \t}\n// \trender(){\n// \t\treturn(\n// \t\t\t<div className=\"app\">\n// \t\t\t\t<Header />\n// \t\t\t\t<Form weatherMetod={this.getWeather}/>\n// \t\t\t\t<Weather />\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/app/app.js"],"names":["React","Component","Form","Weather","WeatherService","city","appId","App","weatherService","state","temperature","undefined","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","API_KEY","data","json","setState","main","temp","name","weather","getDataWeather","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAGA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAO,WAAP;AAIA,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,KAAK,GAAG,kCAAZ;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEjCO,cAFiC,GAEhB,IAAIJ,cAAJ,EAFgB;AAAA,SAIhCK,KAJgC,GAIxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENN,MAAAA,IAAI,EAAEM,SAFA;AAGNC,MAAAA,QAAQ,EAAED,SAHJ;AAINE,MAAAA,WAAW,EAAEF,SAJP;AAKNG,MAAAA,KAAK,EAAEH;AALD,KAJwB;;AAAA,SAW/BI,UAX+B,GAWlB,MAAOC,CAAP,IAAa;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMZ,IAAI,GAAGW,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBd,IAAlB,CAAuBe,KAApC;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDjB,IAArD,oBAAmEkB,OAAnE,mBAA5B;AACA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;;AACA,UAAIpB,IAAJ,EAAU;AACR,aAAKqB,QAAL,CAAc;AACZhB,UAAAA,WAAW,EAAEc,IAAI,CAACG,IAAL,CAAUC,IADX;AAEZvB,UAAAA,IAAI,EAAEmB,IAAI,CAACK,IAFC;AAIZjB,UAAAA,QAAQ,EAAEY,IAAI,CAACG,IAAL,CAAUf,QAJR;AAKZC,UAAAA,WAAW,EAAEW,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBjB,WALjB;AAMZC,UAAAA,KAAK,EAAE;AANK,SAAd;AASD,OAVD,MAUO;AACL,aAAKY,QAAL,CAAc;AACZhB,UAAAA,WAAW,EAAEC,SADD;AAEZN,UAAAA,IAAI,EAAEM,SAFM;AAIZC,UAAAA,QAAQ,EAAED,SAJE;AAKZE,UAAAA,WAAW,EAAEF,SALD;AAMZG,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD;AACF,KApC+B;;AAAA,SAsCjCiB,cAtCiC,GAsChB,MAAMf,CAAN,IAAY;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIX,KAAK,GAAG,kCAAZ;AACA,YAAMD,IAAI,GAAG,KAAKI,KAAL,CAAWJ,IAAxB;AACA,YAAMgB,QAAQ,GAAG,MAAMC,KAAK,4DAAqDjB,IAArD,oBAAmEC,KAAnE,mBAA5B;AACA,YAAMkB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACC,KA7CgC;AAAA;;AA+ChCU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKnB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AACX,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,WADb;AAEE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QAFvB;AAGE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWJ,IAHnB;AAIE,MAAA,WAAW,EAAE,KAAKI,KAAL,CAAWI,WAJ1B;AAKE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF,CADF,CADF,CADF,CADF;AAyBD;;AAzE+B;;AA0EjC;AAED,eAAeP,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React,{Component} from \"react\";\n\n\nimport Form from '../form/form';\nimport Weather from \"../weather/weather\";\nimport WeatherService from '../../services/weather-service';\nimport './app.css';\n\n\n\nlet city = 'London';\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\nclass App extends React.Component {\n\n\tweatherService = new WeatherService(); \n\n  state = {\n    temperature: undefined,\n    city: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  \tgetWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    if (city) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        \n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\" \n\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        \n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the values.\"\n      });\n    }\n  }\n\n\tgetDataWeather = async(e) => {\n\te.preventDefault();\n\tlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\tconst city = this.state.city;\n\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${appId}&units=metric`);\n\tconst data = await api_call.json();\n\tconsole.log(data);\n\t}\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                \n                <div className=\"col-xs-7 form-container\">\n\t\t\t\t\t{/* <Form /> */}\n                  <Form getWeather={this.getWeather} />\n                  <Weather \n\t\t\t\t  \ttemperature={this.state.temperature} \n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    description={this.state.description}\n                    error={this.state.error} />\n                  \n\t\t\t\t  {/* <Weather viewWeather = {this.getDataWeather}/> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n\n\n// import React,{Component} from 'react';\n// import Header from '../header/header';\n// import Form from '../form/form';\n// import Weather from '../weather/weather';\n// // import BorderInfo from '../border-info/border-info';\n\n// import './app.css';\n\n// const API_KEY = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\n\n\n\n// export default class App extends Component{\n\n// \tgetWeather = async(e) =>{\n// \t\te.preventDefault();\n// \t\tconst city = e.target.elements.city.value;\n// \t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n// \t\tconst data = await api_call.json();\n// \t\tconsole.log(data);\n// \t}\n\t\n// \trender(){\n// \t\treturn(\n// \t\t\t<div className=\"app\">\n// \t\t\t\t<Header />\n// \t\t\t\t<Form weatherMetod={this.getWeather}/>\n// \t\t\t\t<Weather />\n\t\t\t\t\n// \t\t\t</div>\n\t\t\t\n// \t\t);\n// \t}\n// }"]},"metadata":{},"sourceType":"module"}