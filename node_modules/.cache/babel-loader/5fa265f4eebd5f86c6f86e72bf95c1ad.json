{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/data-weather/data-weather.js\";\nimport React, { Component } from 'react';\nimport Form from '../form/form';\nimport Weather from '../weather/weather';\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nexport default class DataWeather extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.getDataWeather = async e => {\n      e.preventDefault(); // const city = this.state.city;\n\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(appId, \"&units=metric\"));\n      const response = await api_call.json();\n      this.setState({\n        city: ''\n      });\n      console.log(response);\n\n      if (city) {\n        this.setState({\n          temperature: response.main.temp,\n          city: response.name,\n          humidity: response.main.humidity,\n          description: response.weather[0].description,\n          wind: response.wind.speed,\n          icon: response.weather[0].icon,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          error: \"Данные не введены , введите город\"\n        });\n      }\n    };\n\n    this.state = {\n      temperature: null,\n      city: null,\n      humidity: null,\n      description: null,\n      wind: null,\n      icon: null,\n      error: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadWeather: this.getDataWeather,\n      inputChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      description: this.state.description,\n      wind: this.state.wind,\n      icon: this.state.icon,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/data-weather/data-weather.js"],"names":["React","Component","Form","Weather","appId","DataWeather","constructor","props","onInputChange","e","setState","city","target","value","getDataWeather","preventDefault","api_call","fetch","response","json","console","log","temperature","main","temp","name","humidity","description","weather","wind","speed","icon","error","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,KAAK,GAAG,kCAAZ;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClDK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAYlBC,aAZkB,GAYDC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACbC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADF,OAAd;AAIA,KAjBiB;;AAAA,SAoBlBC,cApBkB,GAoBD,MAAML,CAAN,IAAY;AAC5BA,MAAAA,CAAC,CAACM,cAAF,GAD4B,CAE5B;;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDN,IAArD,oBAAmEP,KAAnE,mBAA5B;AACA,YAAMc,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,WAAKT,QAAL,CAAc;AACbC,QAAAA,IAAI,EAAE;AADO,OAAd;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACC,UAAIP,IAAJ,EAAU;AACT,aAAKD,QAAL,CAAc;AACdY,UAAAA,WAAW,EAAEJ,QAAQ,CAACK,IAAT,CAAcC,IADb;AAEdb,UAAAA,IAAI,EAAEO,QAAQ,CAACO,IAFD;AAGdC,UAAAA,QAAQ,EAAER,QAAQ,CAACK,IAAT,CAAcG,QAHV;AAIdC,UAAAA,WAAW,EAAET,QAAQ,CAACU,OAAT,CAAiB,CAAjB,EAAoBD,WAJnB;AAKdE,UAAAA,IAAI,EAAEX,QAAQ,CAACW,IAAT,CAAcC,KALN;AAMdC,UAAAA,IAAI,EAAEb,QAAQ,CAACU,OAAT,CAAiB,CAAjB,EAAoBG,IANZ;AAOdC,UAAAA,KAAK,EAAE;AAPO,SAAd;AASA,OAVD,MAUO;AACN,aAAKtB,QAAL,CAAc;AACdsB,UAAAA,KAAK,EAAE;AADO,SAAd;AAGA;AACF,KA5CiB;;AAEjB,SAAKC,KAAL,GAAY;AACXX,MAAAA,WAAW,EAAE,IADF;AAEXX,MAAAA,IAAI,EAAE,IAFK;AAGXe,MAAAA,QAAQ,EAAE,IAHC;AAIXC,MAAAA,WAAW,EAAE,IAJF;AAKXE,MAAAA,IAAI,EAAE,IALK;AAMXE,MAAAA,IAAI,EAAE,IANK;AAOXC,MAAAA,KAAK,EAAE;AAPI,KAAZ;AASA;;AAmCDE,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACa,oBAAC,IAAD;AACX,MAAA,WAAW,EAAE,KAAKpB,cADP;AAET,MAAA,WAAW,EAAE,KAAKN,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,EAKc,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,KAAKyB,KAAL,CAAWX,WAD1B;AAEE,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWP,QAFvB;AAGE,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWtB,IAHnB;AAIE,MAAA,WAAW,EAAE,KAAKsB,KAAL,CAAWN,WAJ1B;AAKb,MAAA,IAAI,EAAE,KAAKM,KAAL,CAAWJ,IALJ;AAMb,MAAA,IAAI,EAAE,KAAKI,KAAL,CAAWF,IANJ;AAOE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALd,CADD,CADD;AAmBA;;AAnEiD","sourcesContent":["import React, { Component } from 'react';\n\nimport Form from '../form/form';\nimport Weather from '../weather/weather';\n\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\nexport default class DataWeather extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state=({\n\t\t\ttemperature: null,\n\t\t\tcity: null,\n\t\t\thumidity: null,\n\t\t\tdescription: null,\n\t\t\twind: null,\n\t\t\ticon: null,\n\t\t\terror: null\n\t\t});\n\t}\n\tonInputChange = (e) => {\n\t\tthis.setState({\n\t\t\tcity: e.target.value\n\t\t});\n\t\t\n\t}\n\n\n\tgetDataWeather = async(e) => {\n\t\te.preventDefault();\n\t\t// const city = this.state.city;\n\t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${appId}&units=metric`);\n\t\tconst response = await api_call.json();\n\t\tthis.setState({\n\t\t\tcity: ''\n\t\t});\n\t\tconsole.log(response);\n\t\t\tif (city) {\n\t\t\t\tthis.setState({\n\t\t\t\ttemperature: response.main.temp,\n\t\t\t\tcity: response.name,\n\t\t\t\thumidity: response.main.humidity,\n\t\t\t\tdescription: response.weather[0].description,\n\t\t\t\twind: response.wind.speed,\n\t\t\t\ticon: response.weather[0].icon,\n\t\t\t\terror: \"\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\terror: \"Данные не введены , введите город\"\n\t\t\t\t});\n\t\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"col-xs-7 form-container\">\n                \t<Form\n\t\t\t\t\t\tloadWeather={this.getDataWeather} \n\t\t\t\t  \t\tinputChange={this.onInputChange}\n\t\t\t\t\t/>\n                  <Weather \n                    temperature={this.state.temperature} \n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    description={this.state.description}\n\t\t\t\t\twind={this.state.wind}\n\t\t\t\t\ticon={this.state.icon}\n                    error={this.state.error}\n                  />\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}