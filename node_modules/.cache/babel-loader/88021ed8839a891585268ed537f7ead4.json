{"ast":null,"code":"let appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nexport default class WeatherService {\n  constructor() {\n    this._apiBase = \"https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=\".concat(appId);\n  }\n\n  async getResource() {\n    const res = await fetch(\"\".concat(this._apiBase));\n\n    if (!res.ok) {\n      throw new Error(\"\\u0437\\u0430\\u043F\\u0440\\u043E\\u0441 \\u043D\\u0435 \\u043F\\u0440\\u043E\\u0448\\u0435\\u043B  \" + \", received \".concat(res.status));\n    }\n\n    return await res.json();\n    console.log(res);\n  }\n\n  async getNameCountry(temp) {\n    const res = await this.getResource();\n    return res.main.temp;\n  }\n\n}\nconst name = new WeatherService();\nname.getNameCountry(name).then(body => {\n  console.log(body);\n});","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/services/weather-service.js"],"names":["appId","WeatherService","_apiBase","getResource","res","fetch","ok","Error","status","json","console","log","getNameCountry","temp","main","name","then","body"],"mappings":"AACA,IAAIA,KAAK,GAAG,kCAAZ;AAEA,eAAe,MAAMC,cAAN,CAAoB;AAAA;AAAA,SAElCC,QAFkC,+EAE8CF,KAF9C;AAAA;;AAGlC,QAAMG,WAAN,GAAmB;AAClB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKH,QAAT,EAAvB;;AAEA,QAAI,CAACE,GAAG,CAACE,EAAT,EAAa;AACZ,YAAM,IAAIC,KAAJ,CAAU,kHACFH,GAAG,CAACI,MADF,CAAV,CAAN;AAEA;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA;;AAED,QAAMQ,cAAN,CAAqBC,IAArB,EAA0B;AACzB,UAAMT,GAAG,GAAG,MAAM,KAAKD,WAAL,EAAlB;AACA,WAAOC,GAAG,CAACU,IAAJ,CAASD,IAAhB;AACA;;AAlBiC;AAqBnC,MAAME,IAAI,GAAG,IAAId,cAAJ,EAAb;AAEAc,IAAI,CAACH,cAAL,CAAoBG,IAApB,EAA0BC,IAA1B,CAAgCC,IAAD,IAAS;AACvCP,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,CAFD","sourcesContent":["\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\nexport default class WeatherService{\n\n\t_apiBase = `https://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=${appId}`;\n\tasync getResource(){\n\t\tconst res = await fetch(`${this._apiBase}`);\n\n\t\tif (!res.ok)\t{\n\t\t\tthrow new Error(`запрос не прошел  ` +\n\t\t\t`, received ${res.status}`)\n\t\t}\n\t\treturn await res.json();\n\n\t\tconsole.log(res);\n\t};\n\n\tasync getNameCountry(temp){\n\t\tconst res = await this.getResource();\n\t\treturn res.main.temp;\n\t}\n}\n\nconst name = new WeatherService();\n\nname.getNameCountry(name).then((body) =>{\n\tconsole.log(body)\n})\n\n"]},"metadata":{},"sourceType":"module"}