{"ast":null,"code":"import React, { Component } from \"react\";\nimport WeatherService from '../../services/weather-service';\nimport './weather.css'; // export default class Weather extends Component{\n// \tweatherService = new WeatherService(); \n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\t\tthis.state = {\n// \t\t\t\ttemp: null,\n// \t\t\t\thumidity: null,\n// \t\t\t\tcity: null,\n// \t\t\t\tdescription: null,\n// \t\t\t\twind: null,\n// \t\t\t\terror: null\n// \t\t\t}\n// \t}\n// \tasync getNameCity(name){\n// \t\tconst res = await this.getResource();\n// \t\treturn res.name;\n// \t}\n// \tupdateWeather(props){\n// \t\tthis.getWeather()\n// \t\t\t.then((data) => { \n// \t\t\t\tthis.setState({\n// \t\t\t\t\ttemp: data.main.temp,\n// \t\t\t\t\tcity: data.name,\n// \t\t\t\t\thumidity: data.main.humidity,\n// \t\t\t\t\tdescription: data.weather[0].description,\n// \t\t\t\t\terror: \"\"\n// \t\t\t\t})\n// \t\t\t});\n// \t}\n// \trender(){\n// \t\tconst {temp,humidity,city,description,wind,error} = this.state;\n// \t\treturn(\n// \t\t\t<ul className=\"country_list\">\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Country Name</span>\n// \t\t\t\t\t<span className=\"item_data\">{temp} </span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Capital</span>\n// \t\t\t\t\t<span className=\"item_data\">{humidity}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Population</span>\n// \t\t\t\t\t<span className=\"item_data\">{city}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Area</span>\n// \t\t\t\t\t<span className=\"item_data\">{description}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Area</span>\n// \t\t\t\t\t<span className=\"item_data\">{wind}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Area</span>\n// \t\t\t\t\t<span className=\"item_data\">{error}</span>\n// \t\t\t\t</li>\n// \t\t\t</ul>\n// \t\t);\n// \t}\n// }\n\nconst Weather = () => console.log('could have weather');\n\nexport default Weather;","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/weather/weather.js"],"names":["React","Component","WeatherService","Weather","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAO,eAAP,C,CAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,MACfC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CADD;;AAIA,eAAeF,OAAf","sourcesContent":["import React,{Component} from \"react\";\n\nimport WeatherService from '../../services/weather-service';\nimport './weather.css';\n\n// export default class Weather extends Component{\n\n\n// \tweatherService = new WeatherService(); \n\t\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\t\tthis.state = {\n// \t\t\t\ttemp: null,\n// \t\t\t\thumidity: null,\n// \t\t\t\tcity: null,\n// \t\t\t\tdescription: null,\n// \t\t\t\twind: null,\n// \t\t\t\terror: null\n\t\t\t\t\n// \t\t\t}\n\t\t\n// \t}\n\n\t\n// \tasync getNameCity(name){\n// \t\tconst res = await this.getResource();\n// \t\treturn res.name;\n// \t}\n\n// \tupdateWeather(props){\n// \t\tthis.getWeather()\n// \t\t\t.then((data) => { \n// \t\t\t\tthis.setState({\n// \t\t\t\t\ttemp: data.main.temp,\n// \t\t\t\t\tcity: data.name,\n// \t\t\t\t\thumidity: data.main.humidity,\n// \t\t\t\t\tdescription: data.weather[0].description,\n// \t\t\t\t\terror: \"\"\n\t\t\t\t\t\n// \t\t\t\t})\n// \t\t\t});\n// \t}\n\n\n// \trender(){\n\n// \t\tconst {temp,humidity,city,description,wind,error} = this.state;\n\n// \t\treturn(\n// \t\t\t<ul className=\"country_list\">\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Country Name</span>\n// \t\t\t\t\t<span className=\"item_data\">{temp} </span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Capital</span>\n// \t\t\t\t\t<span className=\"item_data\">{humidity}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Population</span>\n// \t\t\t\t\t<span className=\"item_data\">{city}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Area</span>\n// \t\t\t\t\t<span className=\"item_data\">{description}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Area</span>\n// \t\t\t\t\t<span className=\"item_data\">{wind}</span>\n// \t\t\t\t</li>\n// \t\t\t\t<li>\n// \t\t\t\t\t<span className=\"item\">Area</span>\n// \t\t\t\t\t<span className=\"item_data\">{error}</span>\n// \t\t\t\t</li>\n// \t\t\t</ul>\n// \t\t);\n// \t}\n// }\n\nconst Weather = () => (\n\tconsole.log('could have weather')\n);\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}