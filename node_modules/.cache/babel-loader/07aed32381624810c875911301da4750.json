{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/form/form.js\";\nimport React, { Component } from \"react\";\nimport Weather from \"../weather/weather\";\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.state = {\n      city: '',\n      temp: null\n    };\n  }\n\n  // getDataWeather = async(e) => {\n  // \te.preventDefault();\n  // \tconst city = this.state.city;\n  // \tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${appId}&units=metric`);\n  // \tconst response = await api_call.json();\n  // \tthis.setState({\n  // \t\tcity: ''\n  // \t})\n  // \tconsole.log(response);\n  // \tif (city) {\n  // \t\tthis.setState({\n  // \t\ttemperature: response.main.temp,\n  // \t\tcity: response.name,\n  // \t\thumidity: response.main.humidity,\n  // \t\tdescription: response.weather[0].description,\n  // \t\twind: response.wind.speed,\n  // \t\ticon: response.weather[0].icon,\n  // \t\terror: \"\"\n  // \t\t});\n  // \t} else {\n  // \t\tthis.setState({\n  // \t\terror: \"Данные не введены , введите город\"\n  // \t\t});\n  // \t}\n  // }\n  getDataWeather(props) {\n    return this.props;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.getDataWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n      onChange: this.onInputChange,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u043E\\u0433\\u043E\\u0434\\u0443\")), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      wind: this.state.wind,\n      icon: this.state.icon,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/form/form.js"],"names":["React","Component","Weather","appId","Form","constructor","props","onInputChange","e","setState","city","target","value","state","temp","getDataWeather","render","temperature","humidity","country","description","wind","icon","error"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAGA,IAAIC,KAAK,GAAG,kCAAZ;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAE1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAQnBC,aARmB,GAQFC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACbC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADF,OAAd;AAIA,KAbkB;;AAElB,SAAKC,KAAL,GAAa;AACZH,MAAAA,IAAI,EAAE,EADM;AAEZI,MAAAA,IAAI,EAAE;AAFM,KAAb;AAIA;;AASD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,cAAc,CAACT,KAAD,EAAO;AACpB,WAAO,KAAKA,KAAZ;AACA;;AAGDU,EAAAA,MAAM,GAAE;AAEP,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWS,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,2EAA/B;AACE,MAAA,QAAQ,EAAE,KAAKR,aADjB;AAEE,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWH,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAAL,CAND,EAOC,oBAAC,OAAD;AACgB,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWI,WADxC;AAEgB,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAFrC;AAGgB,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWH,IAHjC;AAIgB,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWM,OAJpC;AAKgB,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,WALxC;AAMC,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,IANlB;AAOC,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,IAPlB;AAQgB,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU,KARlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,CADD;AAsBA;;AAvEyC","sourcesContent":["import React,{Component} from \"react\";\nimport Weather from \"../weather/weather\";\n\n\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\nexport default class Form extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcity: '',\n\t\t\ttemp: null\n\t\t};\n\t}\n\n\tonInputChange = (e) => {\n\t\tthis.setState({\n\t\t\tcity: e.target.value\n\t\t});\n\t\t\n\t}\n\n\t// getDataWeather = async(e) => {\n\t// \te.preventDefault();\n\t// \tconst city = this.state.city;\n\t// \tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${appId}&units=metric`);\n\t// \tconst response = await api_call.json();\n\t// \tthis.setState({\n\t// \t\tcity: ''\n\t// \t})\n\t// \tconsole.log(response);\n\t// \tif (city) {\n\t// \t\tthis.setState({\n\t// \t\ttemperature: response.main.temp,\n\t// \t\tcity: response.name,\n\t// \t\thumidity: response.main.humidity,\n\t// \t\tdescription: response.weather[0].description,\n\t// \t\twind: response.wind.speed,\n\t// \t\ticon: response.weather[0].icon,\n\t// \t\terror: \"\"\n\t// \t\t});\n\t// \t} else {\n\t// \t\tthis.setState({\n\t// \t\terror: \"Данные не введены , введите город\"\n\t// \t\t});\n\t// \t}\n\t// }\n\tgetDataWeather(props){\n\t\treturn this.props;\n\t};\n\t\n\n\trender(){\n\n\t\treturn(\n\t\t\t<form onSubmit={this.props.getDataWeather}>\n\t\t\t\t\n\t\t\t\t<input type=\"text\" placeholder=\"Введите город\"\n\t\t\t\t\t\tonChange={this.onInputChange}\n\t\t\t\t\t\tvalue={this.state.city}\n\t\t\t\t/>\n\t\t\t\t<div><button>Получить погоду</button></div>\n\t\t\t\t<Weather \n                    temperature={this.state.temperature} \n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    country={this.state.country}\n                    description={this.state.description}\n\t\t\t\t\twind={this.state.wind}\n\t\t\t\t\ticon={this.state.icon}\n                    error={this.state.error}\n                  />\n\t\t\t</form>\n\t\t\t\n\t\t\t\n \t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}