{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/app/app.js\";\nimport React, { Component } from \"react\";\nimport Form from '../form/form';\nimport Weather from \"../weather/weather\";\nimport './app.css';\nconst API_KEY = \"887a9e3fcec30ecb5238bc4f492dcf5b\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\n;\nexport default App; // import React,{Component} from 'react';\n// import Header from '../header/header';\n// import Form from '../form/form';\n// import Weather from '../weather/weather';\n// // import BorderInfo from '../border-info/border-info';\n// import './app.css';\n// const API_KEY = '887a9e3fcec30ecb5238bc4f492dcf5b';\n// export default class App extends Component{\n// \tgetWeather = async(e) =>{\n// \t\te.preventDefault();\n// \t\tconst city = e.target.elements.city.value;\n// \t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n// \t\tconst data = await api_call.json();\n// \t\tconsole.log(data);\n// \t}\n// \trender(){\n// \t\treturn(\n// \t\t\t<div className=\"app\">\n// \t\t\t\t<Header />\n// \t\t\t\t<Form weatherMetod={this.getWeather}/>\n// \t\t\t\t<Weather />\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/app/app.js"],"names":["React","Component","Form","Weather","API_KEY","App","state","temperature","undefined","city","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","main","temp","name","weather","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\n\n\nimport Form from '../form/form';\nimport Weather from \"../weather/weather\";\nimport './app.css';\n\n\nconst API_KEY = \"887a9e3fcec30ecb5238bc4f492dcf5b\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  \n\n  getWeather = async (e) => {\n\te.preventDefault();\n\t\n\tconst city = e.target.elements.city.value;\n\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n\tconst data = await api_call.json();\n\tif (city) {\n\t\t  this.setState({\n\t\t\ttemperature: data.main.temp,\n\t\t\tcity: data.name,\n\t\t\thumidity: data.main.humidity,\n\t\t\tdescription: data.weather[0].description,\n\t\t\terror: \"\" \n\t\t});\n\n\t} else {\n\t\tthis.setState({\n\t\t\ttemperature: undefined,\n\t\t\tcity: undefined,\n\t\t\n\t\t\thumidity: undefined,\n\t\t\tdescription: undefined,\n\t\t\terror: \"Please enter the values.\"\n\t\t  });\n\t}\n}\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                \n                <div className=\"col-xs-7 form-container\">\n                  <Form getWeather={this.getWeather} />\n                  <Weather \n                    temperature={this.state.temperature} \n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    description={this.state.description}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n\n\n// import React,{Component} from 'react';\n// import Header from '../header/header';\n// import Form from '../form/form';\n// import Weather from '../weather/weather';\n// // import BorderInfo from '../border-info/border-info';\n\n// import './app.css';\n\n// const API_KEY = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\n\n\n\n// export default class App extends Component{\n\n// \tgetWeather = async(e) =>{\n// \t\te.preventDefault();\n// \t\tconst city = e.target.elements.city.value;\n// \t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n// \t\tconst data = await api_call.json();\n// \t\tconsole.log(data);\n// \t}\n\t\n// \trender(){\n// \t\treturn(\n// \t\t\t<div className=\"app\">\n// \t\t\t\t<Header />\n// \t\t\t\t<Form weatherMetod={this.getWeather}/>\n// \t\t\t\t<Weather />\n\t\t\t\t\n// \t\t\t</div>\n\t\t\t\n// \t\t);\n// \t}\n// }"]},"metadata":{},"sourceType":"module"}