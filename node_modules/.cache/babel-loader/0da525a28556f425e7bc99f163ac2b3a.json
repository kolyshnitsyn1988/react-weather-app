{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/weather/weather.js\";\nimport React, { Component } from \"react\";\nimport WeatherService from '../../services/weather-service';\nimport './weather.css';\nexport default class Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.weatherService = new WeatherService();\n    this.state = {\n      temp: null,\n      humidity: null,\n      city: null,\n      description: null,\n      wind: null,\n      error: null\n    };\n  }\n\n  async getNameCity(name) {\n    const res = await this.getResource();\n    return res.name;\n  }\n\n  updateWeather(props) {\n    this.getWeather().then(data => {\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          temp = _this$state.temp,\n          humidity = _this$state.humidity,\n          city = _this$state.city,\n          description = _this$state.description,\n          wind = _this$state.wind,\n          error = _this$state.error;\n    return React.createElement(\"ul\", {\n      className: \"country_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Country Name\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, temp, \" \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Capital\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, humidity)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, city)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Area\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, description)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Area\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, wind)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Area\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, error)));\n  }\n\n} // const Weather = props => (\n// \t<div className=\"weather__info\">\n// \t {\t\n// \t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n// \t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n// \t \t\t<span className=\"weather__value\"> { props.temperature }\t</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n// \t \t\t<span className=\"weather__value\"> { props.humidity } </span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.description && <p className=\"weather__key\"> Conditions: \n// \t \t\t<span className=\"weather__value\"> { props.description } </span>\n// \t </p> \n// \t }\n// \t { \n// \t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n// \t }\n// \t</div>\n// );\n// export default Weather;","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/weather/weather.js"],"names":["React","Component","WeatherService","Weather","constructor","props","weatherService","state","temp","humidity","city","description","wind","error","getNameCity","name","res","getResource","updateWeather","getWeather","then","data","setState","main","weather","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\n\nimport WeatherService from '../../services/weather-service';\nimport './weather.css';\n\nexport default class Weather extends Component{\n\n\n\tweatherService = new WeatherService(); \n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\ttemp: null,\n\t\t\t\thumidity: null,\n\t\t\t\tcity: null,\n\t\t\t\tdescription: null,\n\t\t\t\twind: null,\n\t\t\t\terror: null\n\t\t\t\t\n\t\t\t}\n\t\t\n\t}\n\n\t\n\tasync getNameCity(name){\n\t\tconst res = await this.getResource();\n\t\treturn res.name;\n\t}\n\n\tupdateWeather(props){\n\t\tthis.getWeather()\n\t\t\t.then((data) => { \n\t\t\t\tthis.setState({\n\t\t\t\t\ttemp: data.main.temp,\n\t\t\t\t\tcity: data.name,\n\t\t\t\t\thumidity: data.main.humidity,\n\t\t\t\t\tdescription: data.weather[0].description,\n\t\t\t\t\terror: \"\"\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t});\n\t}\n\n\n\trender(){\n\n\t\tconst {temp,humidity,city,description,wind,error} = this.state;\n\n\t\treturn(\n\t\t\t<ul className=\"country_list\">\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Country Name</span>\n\t\t\t\t\t<span className=\"item_data\">{temp} </span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Capital</span>\n\t\t\t\t\t<span className=\"item_data\">{humidity}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Population</span>\n\t\t\t\t\t<span className=\"item_data\">{city}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Area</span>\n\t\t\t\t\t<span className=\"item_data\">{description}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Area</span>\n\t\t\t\t\t<span className=\"item_data\">{wind}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Area</span>\n\t\t\t\t\t<span className=\"item_data\">{error}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\n// const Weather = props => (\n// \t<div className=\"weather__info\">\n// \t {\t\n// \t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n// \t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n// \t \t\t<span className=\"weather__value\"> { props.temperature }\t</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n// \t \t\t<span className=\"weather__value\"> { props.humidity } </span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.description && <p className=\"weather__key\"> Conditions: \n// \t \t\t<span className=\"weather__value\"> { props.description } </span>\n// \t </p> \n// \t }\n// \t { \n// \t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n// \t }\n// \t</div>\n// );\n\n// export default Weather;"]},"metadata":{},"sourceType":"module"}