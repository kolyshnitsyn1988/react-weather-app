{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/data-weather/data-weather.js\";\nimport React, { Component } from 'react';\nimport './data-weather.css';\nimport Form from '../form/form';\nimport Weather from '../weather/weather';\nimport ErrorInc from '../error-inc/error-inc';\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nexport default class DataWeather extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.onError = error => {\n      this.setState({\n        error: true\n      });\n    };\n\n    this.getDataWeather = async e => {\n      e.preventDefault();\n      const city = this.state.city;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(appId, \"&units=metric\"));\n      const response = await api_call.json();\n      const error = api_call.catch(this.onError); // if (city) {\n      // \tthis.setState({\n      // \t\ttemp: response.main.temp,\n      // \t\tcity: response.name,\n      // \t\thumidity: response.main.humidity,\n      // \t\tdescription: response.weather[0].description,\n      // \t\twind: response.wind.speed,\n      // \t\ticon: response.weather[0].icon,\n      // \t\terror: null\n      // \t});\n      // } else {\n      // \tthis.setState({\n      // \t\terror: \"Данные не введены , введите город\"\n      // \t});\n      // }\n    };\n\n    this.state = {\n      temp: null,\n      city: null,\n      humidity: null,\n      description: null,\n      wind: null,\n      icon: null,\n      error: null\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          temp = _this$state.temp,\n          city = _this$state.city,\n          humidity = _this$state.humidity,\n          description = _this$state.description,\n          wind = _this$state.wind,\n          icon = _this$state.icon,\n          error = _this$state.error;\n    const errorMessage = error ? React.createElement(ErrorInc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"form_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadWeather: this.getDataWeather,\n      inputChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      humidity: this.state.humidity,\n      city: this.setState.city,\n      description: this.state.description,\n      wind: this.state.wind,\n      icon: this.state.icon,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/data-weather/data-weather.js"],"names":["React","Component","Form","Weather","ErrorInc","appId","DataWeather","constructor","props","onInputChange","e","setState","city","target","value","onError","error","getDataWeather","preventDefault","state","api_call","fetch","response","json","catch","temp","humidity","description","wind","icon","render","errorMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './data-weather.css';\n\nimport Form from '../form/form';\nimport Weather from '../weather/weather';\nimport ErrorInc from '../error-inc/error-inc';\n\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\nexport default class DataWeather extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\ttemp: null,\n\t\t\tcity: null,\n\t\t\thumidity: null,\n\t\t\tdescription: null,\n\t\t\twind: null,\n\t\t\ticon: null,\n\t\t\terror: null\n\t\t};\n\t};\n\t\n\tonInputChange = (e) => {\n\t\tthis.setState({\n\t\t\tcity: e.target.value\n\t\t});\n\t};\n\n\tonError = (error) => {\n\t\tthis.setState({\n\t\t\terror: true\n\t\t});\n\t};\n\t\n\tgetDataWeather = async(e) => {\n\t\te.preventDefault();\n\t\tconst {city} = this.state;\n\t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${appId}&units=metric`);\n\t\tconst response = await api_call.json();\n\t\tconst error = api_call.catch(this.onError);\n\n\n\n\t\t// if (city) {\n\t\t// \tthis.setState({\n\t\t// \t\ttemp: response.main.temp,\n\t\t// \t\tcity: response.name,\n\t\t// \t\thumidity: response.main.humidity,\n\t\t// \t\tdescription: response.weather[0].description,\n\t\t// \t\twind: response.wind.speed,\n\t\t// \t\ticon: response.weather[0].icon,\n\t\t// \t\terror: null\n\t\t// \t});\n\t\t// } else {\n\t\t// \tthis.setState({\n\t\t// \t\terror: \"Данные не введены , введите город\"\n\t\t// \t});\n\t\t// }\n\t};\n\n\trender() {\n\n\t\tconst {temp,\n\t\t\tcity,\n\t\t\thumidity,\n\t\t\tdescription,\n\t\t\twind,\n\t\t\ticon,\n\t\t\terror} = this.state;\n\n\t\tconst errorMessage = error ? <ErrorInc/> : null\n\n\t\treturn (\n\t\t\t<div className=\"form_wrapper\">\n\t\t\t\t<div className=\"form_container\">\n\t\t\t\t\t<Form\n\t\t\t\t\t\tloadWeather={this.getDataWeather} \n\t\t\t\t\t\tinputChange={this.onInputChange} />\n\t\t\t\t\t<Weather \n\t\t\t\t\t\ttemp={this.state.temp} \n\t\t\t\t\t\thumidity={this.state.humidity}\n\t\t\t\t\t\tcity={this.setState.city}\n\t\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\t\twind={this.state.wind}\n\t\t\t\t\t\ticon={this.state.icon}\n\t\t\t\t\t\terror={this.state.error} />\n           \t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}