{"ast":null,"code":"var _jsxFileName = \"/home/dk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/w/sity-weather/src/components/weather/weather.js\";\nimport React, { Component } from \"react\";\nimport './weather.css';\nexport default class Weather extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter the values.\"\n        });\n      }\n    };\n\n    this.state = {\n      temp: null,\n      humidity: null,\n      city: null,\n      description: null,\n      wind: null,\n      error: null\n    };\n  }\n\n  // updateCountry(){\n  // \tthis.countryService.getCallingCode(372)\n  // \t\t.then((country) => { \n  // \t\t\tthis.setState({\n  // \t\t\t\tname: country.name,\n  // \t\t\t\tcapital: country.capital,\n  // \t\t\t\tpopulation: country.population,\n  // \t\t\t\tarea: country.area,\n  // \t\t\t\tsubregion: country.subregion,\n  // \t\t\t\tcurrency: country.currency\n  // \t\t\t})\n  // \t\t});\n  // }\n  render() {\n    const _this$state = this.state,\n          temp = _this$state.temp,\n          humidity = _this$state.humidity,\n          city = _this$state.city,\n          description = _this$state.description,\n          wind = _this$state.wind,\n          error = _this$state.error;\n    return React.createElement(\"ul\", {\n      className: \"country_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Country Name\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, temp, \" \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Capital\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, humidity)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, city)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Area\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, description)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Area\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, wind)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Area\"), React.createElement(\"span\", {\n      className: \"item_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, error)));\n  }\n\n} // const Weather = props => (\n// \t<div className=\"weather__info\">\n// \t {\t\n// \t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n// \t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n// \t \t\t<span className=\"weather__value\"> { props.temperature }\t</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n// \t \t\t<span className=\"weather__value\"> { props.humidity } </span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.description && <p className=\"weather__key\"> Conditions: \n// \t \t\t<span className=\"weather__value\"> { props.description } </span>\n// \t </p> \n// \t }\n// \t { \n// \t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n// \t }\n// \t</div>\n// );\n// export default Weather;","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/components/weather/weather.js"],"names":["React","Component","Weather","constructor","props","getWeather","e","preventDefault","city","target","elements","value","api_call","fetch","API_KEY","data","json","setState","temperature","main","temp","name","humidity","description","weather","error","undefined","state","wind","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\n\nimport './weather.css';\n\nexport default class Weather extends Component{\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\ttemp: null,\n\t\t\t\thumidity: null,\n\t\t\t\tcity: null,\n\t\t\t\tdescription: null,\n\t\t\t\twind: null,\n\t\t\t\terror: null\n\t\t\t\t\n\t\t\t}\n\t\t\n\t}\n\n\tgetWeather = async (e) => {\n\t\te.preventDefault();\n\t\tconst city = e.target.elements.city.value;\n\t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n\t\tconst data = await api_call.json();\n\t\tif (city) {\n\t\t  \tthis.setState({\n\t\t\t\ttemperature: data.main.temp,\n\t\t\t\tcity: data.name,\n\t\t\t\thumidity: data.main.humidity,\n\t\t\t\tdescription: data.weather[0].description,\n\t\t\t\terror: \"\" \n\t\t\t});\n\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttemperature: undefined,\n\t\t\t\tcity: undefined,\n\t\t\t\n\t\t\t\thumidity: undefined,\n\t\t\t\tdescription: undefined,\n\t\t\t\terror: \"Please enter the values.\"\n\t\t  \t});\n\t\t}\n\t}\n\n\n\t// updateCountry(){\n\t// \tthis.countryService.getCallingCode(372)\n\t// \t\t.then((country) => { \n\t// \t\t\tthis.setState({\n\t// \t\t\t\tname: country.name,\n\t// \t\t\t\tcapital: country.capital,\n\t// \t\t\t\tpopulation: country.population,\n\t// \t\t\t\tarea: country.area,\n\t// \t\t\t\tsubregion: country.subregion,\n\t// \t\t\t\tcurrency: country.currency\n\t\t\t\t\t\n\t// \t\t\t})\n\t// \t\t});\n\t// }\n\n\n\trender(){\n\n\t\tconst {temp,humidity,city,description,wind,error} = this.state;\n\n\t\treturn(\n\t\t\t<ul className=\"country_list\">\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Country Name</span>\n\t\t\t\t\t<span className=\"item_data\">{temp} </span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Capital</span>\n\t\t\t\t\t<span className=\"item_data\">{humidity}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Population</span>\n\t\t\t\t\t<span className=\"item_data\">{city}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Area</span>\n\t\t\t\t\t<span className=\"item_data\">{description}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Area</span>\n\t\t\t\t\t<span className=\"item_data\">{wind}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span className=\"item\">Area</span>\n\t\t\t\t\t<span className=\"item_data\">{error}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\n// const Weather = props => (\n// \t<div className=\"weather__info\">\n// \t {\t\n// \t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n// \t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n// \t \t\t<span className=\"weather__value\"> { props.temperature }\t</span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n// \t \t\t<span className=\"weather__value\"> { props.humidity } </span>\n// \t \t</p> \n// \t }\n// \t { \t\n// \t \tprops.description && <p className=\"weather__key\"> Conditions: \n// \t \t\t<span className=\"weather__value\"> { props.description } </span>\n// \t </p> \n// \t }\n// \t { \n// \t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n// \t }\n// \t</div>\n// );\n\n// export default Weather;"]},"metadata":{},"sourceType":"module"}