{"ast":null,"code":"let appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nconst city = 'London';\nexport default class WeatherService {\n  constructor() {\n    this._apiBase = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",uk&APPID=\").concat(appId);\n  }\n\n  async getResource() {\n    const res = await fetch(\"\".concat(this._apiBase));\n\n    if (!res.ok) {\n      throw new Error(\"\\u0437\\u0430\\u043F\\u0440\\u043E\\u0441 \\u043D\\u0435 \\u043F\\u0440\\u043E\\u0448\\u0435\\u043B  \" + \", received \".concat(res.status));\n    }\n\n    return await res.json();\n    console.log(res);\n  }\n\n  // async getTempCity(temp){\n  // \tconst res = await this.getResource();\n  // \treturn res.main.temp;\n  // }\n  async getNameCity(name) {\n    const res = await this.getResource();\n    return res.name;\n  }\n\n} // const citys = new WeatherService();\n// citys.getDataWeather(city).then((body) =>{\n// \tconsole.log(body)\n// })","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/services/weather-service.js"],"names":["appId","city","WeatherService","_apiBase","getResource","res","fetch","ok","Error","status","json","console","log","getNameCity","name"],"mappings":"AACA,IAAIA,KAAK,GAAG,kCAAZ;AACA,MAAMC,IAAI,GAAG,QAAb;AAEA,eAAe,MAAMC,cAAN,CAAoB;AAAA;AAAA,SAElCC,QAFkC,+DAE8BF,IAF9B,uBAE+CD,KAF/C;AAAA;;AAKlC,QAAMI,WAAN,GAAmB;AAClB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKH,QAAT,EAAvB;;AAEA,QAAI,CAACE,GAAG,CAACE,EAAT,EAAa;AACZ,YAAM,IAAIC,KAAJ,CAAU,kHACFH,GAAG,CAACI,MADF,CAAV,CAAN;AAEA;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA;;AAED;AACA;AACA;AACA;AAEA,QAAMQ,WAAN,CAAkBC,IAAlB,EAAuB;AACtB,UAAMT,GAAG,GAAG,MAAM,KAAKD,WAAL,EAAlB;AACA,WAAOC,GAAG,CAACS,IAAX;AACA;;AAzBiC,C,CA8BnC;AAEA;AACA;AACA","sourcesContent":["\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nconst city = 'London';\n\nexport default class WeatherService{\n\n\t_apiBase = `https://api.openweathermap.org/data/2.5/weather?q=${city},uk&APPID=${appId}`;\n\t\n\t\n\tasync getResource(){\n\t\tconst res = await fetch(`${this._apiBase}`);\n\n\t\tif (!res.ok)\t{\n\t\t\tthrow new Error(`запрос не прошел  ` +\n\t\t\t`, received ${res.status}`)\n\t\t}\n\t\treturn await res.json();\n\n\t\tconsole.log(res);\n\t};\n\n\t// async getTempCity(temp){\n\t// \tconst res = await this.getResource();\n\t// \treturn res.main.temp;\n\t// }\n\n\tasync getNameCity(name){\n\t\tconst res = await this.getResource();\n\t\treturn res.name;\n\t}\n\n\t\n}\n\n// const citys = new WeatherService();\n\n// citys.getDataWeather(city).then((body) =>{\n// \tconsole.log(body)\n// })\n\n"]},"metadata":{},"sourceType":"module"}