{"ast":null,"code":"let appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nconst city = 'London';\nexport default class WeatherService {\n  constructor() {\n    this._apiBase = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",uk&APPID=\").concat(appId);\n  }\n\n  async getResource() {\n    const res = await fetch(\"\".concat(this._apiBase));\n\n    if (!res.ok) {\n      throw new Error(\"\\u0437\\u0430\\u043F\\u0440\\u043E\\u0441 \\u043D\\u0435 \\u043F\\u0440\\u043E\\u0448\\u0435\\u043B  \" + \", received \".concat(res.status));\n    }\n\n    return await res.json();\n    console.log(res);\n  }\n\n  // async getTempCity(temp){\n  // \tconst res = await this.getResource();\n  // \treturn res.main.temp;\n  // }\n  async getNameCity(name) {\n    const res = await this.getResource();\n    return res.name;\n  }\n\n  async inputCityName(e) {\n    let appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n    let citys = 'London'; // e.preventDefault();\n\n    let city = e.target.city.value;\n    const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(appId, \"&units=metric\"));\n    const data = await api_call.json();\n    console.log(data);\n  }\n\n}\nconst citys = new WeatherService();\ncitys.inputCityName(city).then(body => {\n  console.log(body);\n});","map":{"version":3,"sources":["/home/dk/Рабочий стол/w/sity-weather/src/services/weather-service.js"],"names":["appId","city","WeatherService","_apiBase","getResource","res","fetch","ok","Error","status","json","console","log","getNameCity","name","inputCityName","e","citys","target","value","api_call","data","then","body"],"mappings":"AACA,IAAIA,KAAK,GAAG,kCAAZ;AACA,MAAMC,IAAI,GAAG,QAAb;AAEA,eAAe,MAAMC,cAAN,CAAoB;AAAA;AAAA,SAElCC,QAFkC,+DAE8BF,IAF9B,uBAE+CD,KAF/C;AAAA;;AAKlC,QAAMI,WAAN,GAAmB;AAClB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAI,KAAKH,QAAT,EAAvB;;AAEA,QAAI,CAACE,GAAG,CAACE,EAAT,EAAa;AACZ,YAAM,IAAIC,KAAJ,CAAU,kHACFH,GAAG,CAACI,MADF,CAAV,CAAN;AAEA;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA;;AAED;AACA;AACA;AACA;AAEA,QAAMQ,WAAN,CAAkBC,IAAlB,EAAuB;AACtB,UAAMT,GAAG,GAAG,MAAM,KAAKD,WAAL,EAAlB;AACA,WAAOC,GAAG,CAACS,IAAX;AACA;;AAED,QAAMC,aAAN,CAAoBC,CAApB,EAAsB;AACrB,QAAIhB,KAAK,GAAG,kCAAZ;AACA,QAAIiB,KAAK,GAAG,QAAZ,CAFqB,CAIrB;;AACA,QAAIhB,IAAI,GAAGe,CAAC,CAACE,MAAF,CAASjB,IAAT,CAAckB,KAAzB;AACA,UAAMC,QAAQ,GAAG,MAAMd,KAAK,4DAAqDL,IAArD,oBAAmED,KAAnE,mBAA5B;AACA,UAAMqB,IAAI,GAAG,MAAMD,QAAQ,CAACV,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACA;;AApCiC;AA0CnC,MAAMJ,KAAK,GAAG,IAAIf,cAAJ,EAAd;AAEAe,KAAK,CAACF,aAAN,CAAoBd,IAApB,EAA0BqB,IAA1B,CAAgCC,IAAD,IAAS;AACvCZ,EAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,CAFD","sourcesContent":["\nlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\nconst city = 'London';\n\nexport default class WeatherService{\n\n\t_apiBase = `https://api.openweathermap.org/data/2.5/weather?q=${city},uk&APPID=${appId}`;\n\t\n\t\n\tasync getResource(){\n\t\tconst res = await fetch(`${this._apiBase}`);\n\n\t\tif (!res.ok)\t{\n\t\t\tthrow new Error(`запрос не прошел  ` +\n\t\t\t`, received ${res.status}`)\n\t\t}\n\t\treturn await res.json();\n\n\t\tconsole.log(res);\n\t};\n\n\t// async getTempCity(temp){\n\t// \tconst res = await this.getResource();\n\t// \treturn res.main.temp;\n\t// }\n\n\tasync getNameCity(name){\n\t\tconst res = await this.getResource();\n\t\treturn res.name;\n\t}\n\n\tasync inputCityName(e){\n\t\tlet appId = '887a9e3fcec30ecb5238bc4f492dcf5b';\n\t\tlet citys = 'London';\n\n\t\t// e.preventDefault();\n\t\tlet city = e.target.city.value;\n\t\tconst api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${appId}&units=metric`);\n\t\tconst data = await api_call.json();\n\t\tconsole.log(data);\n\t}\n\n\t\n\t\n}\n\nconst citys = new WeatherService();\n\ncitys.inputCityName(city).then((body) =>{\n\tconsole.log(body)\n})\n\n"]},"metadata":{},"sourceType":"module"}